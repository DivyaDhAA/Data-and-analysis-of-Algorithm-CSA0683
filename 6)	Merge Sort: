6)	Merge Sort:
#include <stdio.h>
void combine(int a[],int low,int mid,int high) {
    int temp[high-low+1]; 
    int k=0;
    int i=low; 
    int j=mid+1;
    while (i<=mid && j<=high) {
        if (a[i]<=a[j]) {
            temp[k]=a[i];
            i++;
        } else {
            temp[k]=a[j];
            j++;
        }
        k++;
    }
    while (i<=mid){
        temp[k]=a[i];
        i++;
        k++;
    }
    while (j<=high) {
        temp[k]=a[j];
        j++;
        k++;
    }
    for (i=low,k=0;i<=high;i++,k++){
        a[i]=temp[k];
    }
}
void mergesort(int a[],int low,int high) {
    if (low<high){
        int mid = (low+high)/2;
        mergesort(a,low,mid); 
        mergesort(a,mid +1,high);
        combine(a,low,mid,high); 
    }
}
int main() {
    int a[]={23,3,1,35,6};
    int n=sizeof(a)/sizeof(a[0]);
    mergesort(a,0,n-1);
    printf("Sorted array: ");
    for (int i=0;i<n;i++) {
        printf("%d ",a[i]);
    }
    return 0;
}
